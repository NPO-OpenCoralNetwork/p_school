/**
 * È≠îÊ≥ï„ÅÆÊõ∏ - È≠îÊ≥ï„ÅÆË©†Âî±„Éë„Çø„Éº„É≥„Å®ÊÉÖÂ†±„ÇíË°®Á§∫„Åô„ÇãUI
 */
export class SpellBook {
  constructor() {
    this.isVisible = false;
    this.container = null;
    this.createSpellBookUI();
  }

  createSpellBookUI() {
    // È≠îÊ≥ï„ÅÆÊõ∏„ÅÆ„Ç≥„É≥„ÉÜ„Éä„Çí‰ΩúÊàê
    this.container = document.createElement('div');
    this.container.id = 'spellbook';
    this.container.className = 'spellbook-container';
    this.container.style.cssText = `
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 600px;
      max-height: 80vh;
      background: linear-gradient(135deg, #2a1810, #4a3020);
      border: 3px solid #8b6914;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.8);
      z-index: 1000;
      display: none;
      overflow-y: auto;
      font-family: 'Georgia', serif;
    `;

    // „Éò„ÉÉ„ÉÄ„Éº
    const header = document.createElement('div');
    header.className = 'spellbook-header';
    header.style.cssText = `
      background: linear-gradient(90deg, #8b6914, #b8860b);
      padding: 15px;
      text-align: center;
      border-radius: 12px 12px 0 0;
      position: relative;
    `;

    const title = document.createElement('h2');
    title.textContent = 'üìñ È≠îÊ≥ï„ÅÆÊõ∏';
    title.style.cssText = `
      margin: 0;
      color: #fff;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
      font-size: 24px;
    `;

    // Èñâ„Åò„Çã„Éú„Çø„É≥
    const closeBtn = document.createElement('button');
    closeBtn.textContent = '‚úï';
    closeBtn.style.cssText = `
      position: absolute;
      top: 10px;
      right: 15px;
      background: none;
      border: none;
      color: #fff;
      font-size: 20px;
      cursor: pointer;
      padding: 5px;
      border-radius: 3px;
      display: block;
    `;
    closeBtn.onclick = () => this.hide();

    header.appendChild(title);
    header.appendChild(closeBtn);

    // „Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç®„É™„Ç¢
    const content = document.createElement('div');
    content.className = 'spellbook-content';
    content.style.cssText = `
      padding: 20px;
      color: #f4e4bc;
      line-height: 1.6;
    `;

    this.container.appendChild(header);
    this.container.appendChild(content);
    document.body.appendChild(this.container);

    this.populateSpellBook(content);
  }
  populateSpellBook(content) {
    // Âü∫Êú¨„Ç≥„Éû„É≥„Éâ
    const basicCommands = [
      {
        name: '‚öîÔ∏è ÊîªÊíÉ',
        stage: 1,
        description: 'Âü∫Êú¨ÁöÑ„Å™ÊîªÊíÉ„Ç≥„Éû„É≥„Éâ',
        usage: 'attack „Éñ„É≠„ÉÉ„ÇØ„Çí‰ΩøÁî®',
        effect: 'Êïµ„Å´ÈÄöÂ∏∏„ÉÄ„É°„Éº„Ç∏„Çí‰∏é„Åà„Çã',
        notes: [
          'ÊúÄ„ÇÇÂü∫Êú¨ÁöÑ„Å™Êà¶Èóò„Ç≥„Éû„É≥„Éâ',
          'HP„ÇíÊ∂àË≤ª„Åó„Å™„ÅÑ',
          'Á¢∫ÂÆü„Å´ÂëΩ‰∏≠„Åô„Çã'
        ],
        difficulty: 'ÂàùÁ¥ö'
      },
      {
        name: '‚åõ ÂæÖÊ©ü',
        stage: 1,
        description: 'Ê¨°„ÅÆ„Çø„Éº„É≥„Åæ„ÅßÂæÖÊ©ü„Åô„Çã',
        usage: 'wait „Éñ„É≠„ÉÉ„ÇØ„Çí‰ΩøÁî®',
        effect: '„Çø„Éº„É≥„ÇíÊ∂àË≤ª„Åô„Çã',
        notes: [
          'HP„ÇíÊ∂àË≤ª„Åó„Å™„ÅÑ',
          '„Çø„Éº„É≥ÁµåÈÅé„Å´„Çà„ÇãÂõûÂæ©„ÇÑÁä∂ÊÖãÂ§âÂåñ„ÇíÂæÖ„Å§ÊôÇ„Å´ÊúâÂäπ',
          'Êïµ„ÅÆË°åÂãï„Éë„Çø„Éº„É≥„ÇíË¶≥ÂØü„Åô„Çã„ÅÆ„Å´‰æøÂà©'
        ],
        difficulty: 'ÂàùÁ¥ö'
      }
    ];

    // ÂõûÂæ©È≠îÊ≥ï
    const healingSpells = [
      {
        name: 'üíö ÂõûÂæ©„ÅÆÈ≠îÊ≥ï (HEALING)',
        stage: 2,
        pattern: 'Â∑¶Êâã ‚Üí Âè≥Êâã ‚Üí Â∑¶Êâã ‚Üí Âè≥Êâã ‚Üí Â∑¶Êâã ‚Üí Âè≥Êâã',
        description: 'HP„ÇíÂõûÂæ©„Åô„ÇãÁîüÂëΩÈ≠îÊ≥ï',
        effect: 'HPÂõûÂæ© (10)',
        notes: [
          'Èï∑„ÅÑË©†Âî±„Éë„Çø„Éº„É≥„ÅåÂøÖË¶Å',
          'Êà¶Èóò‰∏≠„ÅÆÂõûÂæ©„Å´ÈáçË¶Å',
          'Ê≠£Á¢∫„Å™Ë©†Âî±„ÅåÂøÖË¶Å',
          'Â§±Êïó„Åô„Çã„Å®ÂõûÂæ©„Åß„Åç„Å™„ÅÑ',
          'ÊØíÁä∂ÊÖã„Åß„ÅØÂõûÂæ©Èáè„ÅåÊ∏õÂ∞ë„Åô„Çã'
        ],
        difficulty: '‰∏≠Á¥ö'
      }
    ];

    // ÊîªÊíÉÈ≠îÊ≥ï
    const attackSpells = [
      {
        name: 'üî• ÁÇé„ÅÆÈ≠îÊ≥ï (FIRE)',
        stage: 3,
        pattern: 'Âè≥Êâã ‚Üí Âè≥Êâã ‚Üí Â∑¶Êâã',
        description: 'Êïµ„Å´ÁÇé„ÅÆ„ÉÄ„É°„Éº„Ç∏„Çí‰∏é„Åà„ÇãÂü∫Êú¨ÁöÑ„Å™ÊîªÊíÉÈ≠îÊ≥ï',
        damage: '‰∏≠Á®ãÂ∫¶ (8)',
        notes: [
          'ÊúÄ„ÇÇÂü∫Êú¨ÁöÑ„Å™ÊîªÊíÉÈ≠îÊ≥ï',
          'Ë©†Âî±„ÅåÊØîËºÉÁöÑÁ∞°Âçò',
          'Ê∞∑Á≥ª„ÅÆÊïµ„Å´ÂäπÊûúÁöÑ',
          '„Éï„Ç°„Ç§„Ç¢„Ç¥„Éñ„É™„É≥„Å´„ÅØÂäπÊûú„Åå‰Ωé„ÅÑ'
        ],
        difficulty: 'ÂàùÁ¥ö'
      },
      {
        name: '‚ùÑÔ∏è Ê∞∑„ÅÆÈ≠îÊ≥ï (ICE)',
        stage: 4,
        pattern: 'Â∑¶Êâã ‚Üí Â∑¶Êâã',
        description: 'Êïµ„ÇíÊ∞∑„ÅßÊîªÊíÉ„Åó„ÄÅÂãï„Åç„ÇíÈàç„Çâ„Åõ„ÇãÈ≠îÊ≥ï',
        damage: '‰∏≠Á®ãÂ∫¶ (6)',
        notes: [
          'Ë©†Âî±„Éë„Çø„Éº„É≥„ÅåÁü≠„ÅÑ',
          'ÁÇéÁ≥ª„ÅÆÊïµ„Å´ÂäπÊûúÁöÑ',
          'Êïµ„ÅÆÂãï„Åç„ÇíÈÅÖ„Åè„Åô„ÇãÂäπÊûú„Åå„ÅÇ„Çã',
          '„Éï„É¨„Ç§„É†„Ç¶„É´„Éï„Å´ÂØæ„Åó„Å¶Áâπ„Å´ÊúâÂäπ'
        ],
        difficulty: 'ÂàùÁ¥ö'
      },
      {
        name: '‚ö° Èõ∑„ÅÆÈ≠îÊ≥ï (THUNDER)',
        stage: 7,
        pattern: 'Âè≥Êâã ‚Üí Â∑¶Êâã ‚Üí Âè≥Êâã ‚Üí Â∑¶Êâã',
        description: 'Âº∑Âäõ„Å™Èõ∑ÊíÉ„ÅßÊïµ„ÇíÊîªÊíÉ„Åô„ÇãÈ´òÁ¥öÈ≠îÊ≥ï',
        damage: 'È´òÂ®ÅÂäõ (15)',
        notes: [
          'ÊúÄ„ÇÇË§áÈõë„Å™Ë©†Âî±„Éë„Çø„Éº„É≥',
          'ÈáëÂ±ûÁ≥ª„ÅÆÊïµ„Å´Áµ∂Â§ß„Å™ÂäπÊûú',
          'Ë£ÖÁî≤„ÇíË≤´ÈÄö„Åô„ÇãÂäõ„Åå„ÅÇ„Çã',
          '„É°„Çø„É´„Çπ„É©„Ç§„É†„ÅÆÈò≤Âæ°„ÇíÁÑ°Ë¶ñ„Åß„Åç„Çã',
          'Ë©†Âî±„Å´Â§±Êïó„Åó„ÇÑ„Åô„ÅÑ„ÅÆ„ÅßÊ≥®ÊÑè'
        ],
        difficulty: '‰∏≠Á¥ö'
      }
    ];

    // Ëñ¨Â≠¶
    const alchemy = [
      {
        name: 'üíä Ëß£ÊØíËñ¨‰ΩúÊàê',
        stage: 6,
        usage: 'brew_antidote „Éñ„É≠„ÉÉ„ÇØ„Çí‰ΩøÁî®',
        description: 'Ëß£ÊØíËñ¨„ÇíË™øÂêà„Åô„Çã',
        effect: 'ÊØíÁä∂ÊÖã„ÇíÊ≤ªÁôÇ„Åß„Åç„ÇãËñ¨„Çí‰ΩúÊàê',
        notes: [
          '‰ΩúÊàê„Å´„ÅØ1„Çø„Éº„É≥ÂøÖË¶Å',
          '‰ΩúÊàê„Åó„ÅüËß£ÊØíËñ¨„ÅØ‰ªªÊÑè„ÅÆ„Çø„Ç§„Éü„É≥„Ç∞„Åß‰ΩøÁî®ÂèØËÉΩ',
          '„Éù„Ç§„Ç∫„É≥„Ç≥„É≥„Ç∞„ÅÆÊØíÊîªÊíÉ„Å´ÂÇô„Åà„Å¶‰ΩúÊàê„Åó„Å¶„Åä„Åè„Å®ËâØ„ÅÑ',
          '‰∏ÄÂ∫¶„Å´Ë§áÊï∞ÂÄãÊåÅ„Å§„Åì„Å®„ÅØ„Åß„Åç„Å™„ÅÑ'
        ],
        difficulty: '‰∏≠Á¥ö'
      },
      {
        name: 'üß™ „Éù„Éº„Ç∑„Éß„É≥‰ΩøÁî®',
        stage: 6,
        usage: 'use_potion „Éñ„É≠„ÉÉ„ÇØ„Çí‰ΩøÁî®',
        description: 'Ë™øÂêà„Åó„ÅüËñ¨„Çí‰ΩøÁî®„Åô„Çã',
        effect: 'ÂØæÂøú„Åô„ÇãÁä∂ÊÖãÁï∞Â∏∏„ÇíÊ≤ªÁôÇ',
        notes: [
          'Ëß£ÊØíËñ¨„Çí‰ΩøÁî®„Åô„Çã„Å®ÊØíÁä∂ÊÖã„ÅåÊ≤ªÁôÇ„Åï„Çå„Çã',
          '‰ΩøÁî®„Åô„Çã„Å´„ÅØ‰∫ãÂâç„Å´Ë™øÂêà„ÅåÂøÖË¶Å',
          '‰ΩøÁî®„Åó„Å¶„ÇÇÊñ∞„Åó„ÅÑÊØí„Å´„ÅØÂÜçÂ∫¶„Åã„Åã„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã',
          '„Çø„Ç§„Éü„É≥„Ç∞„ÇíË¶ãÊ•µ„ÇÅ„Å¶‰ΩøÁî®„Åô„Çã„Åì„Å®„ÅåÈáçË¶Å'
        ],
        difficulty: '‰∏≠Á¥ö'
      }
    ];

    // Âà∂Âæ°ÊßãÈÄ†
    const controlStructures = [
      {
        name: 'üîÑ 2ÂõûÁπ∞„ÇäËøî„Åó',
        stage: 8,
        usage: 'repeat_twice „Éñ„É≠„ÉÉ„ÇØ„Çí‰ΩøÁî®',
        description: 'ÊåáÂÆö„Åó„Åü„Ç≥„Éû„É≥„Éâ„Çí2ÂõûÈÄ£Á∂ö„ÅßÂÆüË°å',
        effect: '„Éñ„É≠„ÉÉ„ÇØÂÜÖ„ÅÆÂá¶ÁêÜ„Çí2ÂõûÁπ∞„ÇäËøî„Åô',
        notes: [
          '„Éñ„É≠„ÉÉ„ÇØÂÜÖ„Å´Ë§áÊï∞„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÈÖçÁΩÆÂèØËÉΩ',
          'ÊîªÊíÉ„ÇÑÈ≠îÊ≥ï„ÇíÈÄ£Á∂ö„ÅßÊîæ„Å§„ÅÆ„Å´‰æøÂà©',
          'HP„ÅÆÊÆãÈáè„Å´Ê≥®ÊÑè„Åó„Å¶‰ΩøÁî®„Åô„Çã',
          '„Ç¥„Éñ„É™„É≥ÈÉ®Èöä„Å∏„ÅÆÂÖ®‰ΩìÊîªÊíÉ„Å®ÁµÑ„ÅøÂêà„Çè„Åõ„Çã„Å®ÂäπÊûúÁöÑ',
          'Áπ∞„ÇäËøî„Åó„ÅÆÈÄî‰∏≠„ÅßHP„Åå0„Å´„Å™„Çã„Å®‰∏≠Êñ≠„Åï„Çå„Çã'
        ],
        difficulty: '‰∏≠Á¥ö'
      }
    ];    // „Ç´„ÉÜ„Ç¥„É™„Åî„Å®„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çí‰ΩúÊàê
    [
      { title: '‚öîÔ∏è Âü∫Êú¨„Ç≥„Éû„É≥„Éâ', items: basicCommands },
      { title: 'üíö ÂõûÂæ©È≠îÊ≥ï', items: healingSpells },
      { title: 'üîÆ ÊîªÊíÉÈ≠îÊ≥ï', items: attackSpells },
      { title: 'üß™ Ëñ¨Â≠¶', items: alchemy },
      { title: 'üîÑ Âà∂Âæ°ÊßãÈÄ†', items: controlStructures }
    ].forEach(category => {
      // „Ç´„ÉÜ„Ç¥„É™„Éò„ÉÉ„ÉÄ„Éº
      const categoryHeader = document.createElement('h2');
      categoryHeader.textContent = category.title;
      categoryHeader.style.cssText = `
        color: #ffd700;
        margin: 30px 0 15px 0;
        font-size: 24px;
        text-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
        border-bottom: 2px solid #8b6914;
        padding-bottom: 10px;
      `;
      content.appendChild(categoryHeader);

      // „Ç´„ÉÜ„Ç¥„É™ÂÜÖ„ÅÆÂêÑ„Ç¢„Ç§„ÉÜ„É†
      category.items.forEach(item => {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'spell-entry';
        itemDiv.style.cssText = `
          margin-bottom: 25px;
          padding: 15px;
          background: rgba(0, 0, 0, 0.3);
          border-left: 4px solid #8b6914;
          border-radius: 8px;
        `;

        const itemName = document.createElement('h3');
        itemName.textContent = `${item.name} ${item.stage ? `(„Çπ„ÉÜ„Éº„Ç∏${item.stage}„Äú)` : ''}`;
        itemName.style.cssText = `
          margin: 0 0 10px 0;
          color: #ffd700;
          font-size: 18px;
        `;

        const description = document.createElement('p');
        description.textContent = item.description;
        description.style.cssText = `
          margin: 10px 0;
          font-style: italic;
          color: #e6d3a3;
        `;

        // „Éë„Çø„Éº„É≥„Åæ„Åü„ÅØ‰ΩøÁî®ÊñπÊ≥ï
        if (item.pattern || item.usage) {
          const patternDiv = document.createElement('div');
          patternDiv.style.cssText = `
            background: rgba(255, 215, 0, 0.1);
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
            border: 1px solid #8b6914;
          `;
          
          const patternLabel = document.createElement('strong');
          patternLabel.textContent = item.pattern ? 'Ë©†Âî±„Éë„Çø„Éº„É≥: ' : '‰ΩøÁî®ÊñπÊ≥ï: ';
          patternLabel.style.color = '#ffd700';
          
          const patternText = document.createElement('span');
          patternText.textContent = item.pattern || item.usage;
          patternText.style.cssText = `
            font-family: 'Courier New', monospace;
            color: #fff;
            font-weight: bold;
          `;
          
          patternDiv.appendChild(patternLabel);
          patternDiv.appendChild(patternText);
          itemDiv.appendChild(patternDiv);
        }

        // ÂäπÊûúÊÉÖÂ†±
        const effectInfo = document.createElement('div');
        effectInfo.style.cssText = `
          margin: 10px 0;
          font-size: 14px;
        `;
        
        if (item.damage) {
          const damageSpan = document.createElement('span');
          damageSpan.innerHTML = `<strong>Â®ÅÂäõ:</strong> ${item.damage}`;
          damageSpan.style.color = '#ff6b6b';
          effectInfo.appendChild(damageSpan);
        }
        
        if (item.effect) {
          const effectSpan = document.createElement('span');
          effectSpan.innerHTML = `<strong>ÂäπÊûú:</strong> ${item.effect}`;
          effectSpan.style.color = '#51cf66';
          effectInfo.appendChild(effectSpan);
        }

        // Èõ£ÊòìÂ∫¶
        if (item.difficulty) {
          const difficulty = document.createElement('div');
          difficulty.innerHTML = `<strong>Èõ£ÊòìÂ∫¶:</strong> ${item.difficulty}`;
          difficulty.style.cssText = `
            margin: 5px 0;
            font-size: 14px;
            color: ${item.difficulty === 'ÂàùÁ¥ö' ? '#51cf66' : '#ffd43b'};
          `;
          itemDiv.appendChild(difficulty);
        }

        // Ê≥®ÊÑè‰∫ãÈ†Ö
        if (item.notes && item.notes.length > 0) {
          const notesTitle = document.createElement('h4');
          notesTitle.textContent = 'üìù Ê≥®ÊÑè‰∫ãÈ†Ö';
          notesTitle.style.cssText = `
            margin: 15px 0 5px 0;
            color: #ffd700;
            font-size: 14px;
          `;
          itemDiv.appendChild(notesTitle);

          const notesList = document.createElement('ul');
          notesList.style.cssText = `
            margin: 10px 0;
            padding-left: 20px;
            color: #c9b037;
          `;
          
          item.notes.forEach(note => {
            const li = document.createElement('li');
            li.textContent = note;
            li.style.cssText = `
              margin: 5px 0;
              color: #d4c77a;
            `;
            notesList.appendChild(li);
          });
          
          itemDiv.appendChild(notesList);
        }

        itemDiv.appendChild(itemName);
        itemDiv.appendChild(description);
        if (effectInfo.hasChildNodes()) {
          itemDiv.appendChild(effectInfo);
        }
        
        content.appendChild(itemDiv);
      });
    });
    // ‰ΩøÁî®ÊñπÊ≥ï„ÅÆË™¨Êòé„ÇíËøΩÂä†
    const usage = document.createElement('div');
    usage.style.cssText = `
      margin-top: 30px;
      padding: 15px;
      background: rgba(139, 105, 20, 0.2);
      border-radius: 8px;
      border: 1px solid #8b6914;
    `;
    
    usage.innerHTML = `
      <h3 style="color: #ffd700; margin-top: 0;">üìö È≠îÊ≥ï„ÅÆ‰ΩøÁî®ÊñπÊ≥ï</h3>
      <ol style="color: #d4c77a; line-height: 1.8;">
        <li><strong>È≠îÊ≥ïË©†Âî±„Éñ„É≠„ÉÉ„ÇØ</strong>„ÇíÈÖçÁΩÆ„Åó„Åæ„Åô</li>
        <li>Ë©†Âî±„Åô„ÇãÈ≠îÊ≥ï„ÅÆÁ®ÆÈ°û„ÇíÈÅ∏Êäû„Åó„Åæ„Åô</li>
        <li><strong>Â∑¶Êâã„ÅßË©†Âî±</strong>„Éª<strong>Âè≥Êâã„ÅßË©†Âî±</strong>„Éñ„É≠„ÉÉ„ÇØ„ÇíÊ≠£„Åó„ÅÑÈ†ÜÂ∫è„ÅßÈÖçÁΩÆ„Åó„Åæ„Åô</li>
        <li>„Éë„Çø„Éº„É≥„ÅåÊ≠£Á¢∫„Åß„Å™„ÅÑ„Å®È≠îÊ≥ï„ÅØÂ§±Êïó„Åó„Åæ„Åô</li>
        <li>È≠îÊ≥ï„ÅÆÊõ∏„Åß„Éë„Çø„Éº„É≥„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åã„ÇâË©†Âî±„Åó„Åæ„Åó„Çá„ÅÜ</li>
      </ol>
      <p style="color: #ff6b6b; font-style: italic; margin-bottom: 0;">
        üí° „Éí„É≥„Éà: Ë§áÈõë„Å™È≠îÊ≥ï„Åª„Å©Â®ÅÂäõ„ÅåÈ´ò„ÅÑ„Åß„Åô„Åå„ÄÅË©†Âî±„Å´Â§±Êïó„Åó„ÇÑ„Åô„Åè„Å™„Çä„Åæ„Åô
      </p>
    `;
    
    content.appendChild(usage);
  }

  show() {
    this.isVisible = true;
    this.container.style.display = 'block';
    
    // „Éï„Çß„Éº„Éâ„Ç§„É≥ÂäπÊûú
    this.container.style.opacity = '0';
    this.container.style.transform = 'translate(-50%, -50%) scale(0.9)';
    
    setTimeout(() => {
      this.container.style.transition = 'all 0.3s ease';
      this.container.style.opacity = '1';
      this.container.style.transform = 'translate(-50%, -50%) scale(1)';
    }, 10);
  }

  hide() {
    this.container.style.transition = 'all 0.3s ease';
    this.container.style.opacity = '0';
    this.container.style.transform = 'translate(-50%, -50%) scale(0.9)';
    
    setTimeout(() => {
      this.container.style.display = 'none';
      this.isVisible = false;
    }, 300);
  }

  toggle() {
    if (this.isVisible) {
      this.hide();
    } else {
      this.show();
    }
  }
}
